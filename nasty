#!/usr/bin/env ruby
require 'fileutils'
require 'lib/spinneret'

DEFAULT_PROCESSES = 1

if ARGV.size == 1
  num_processes = Integer(ARGV[0])
else
  num_processes = DEFAULT_PROCESSES
end

# Simulation Parameters
m_algs = Spinneret::Maintenance.constants
#maintenance_rate = [1000, 10000, 30000, 60000]
#maintenance_amount = [1, 3, 5, 10, 20]
#link_table_size = [10, 25, 50, 100] 
maintenance_rate = [1000, 10000, 30000]
maintenance_amount = [1, 3, 5, 10, 20]
link_table_size = [10, 25, 50, 100] 

jobs = []

def clear_and_make(dir)
  `rm -fr #{dir}`
  FileUtils.mkdir_p(dir)
end

# Create directory for this run
bs_dir = File.join("data", "bootstrap")
clear_and_make(bs_dir)

# Bootstrap Simulations
Dir.glob("workloads/bootstrap_*") do |workload|
  m_algs.each do | alg |
    next if alg == "Opportunistic"
    maintenance_rate.each do |m_rate|
      maintenance_amount.each do |m_amount|
        link_table_size.each do |table_size|
          job_dir = File.join(bs_dir, workload, m_rate.to_s, m_amount.to_s, table_size.to_s, alg)
          clear_and_make(job_dir)
          jobs << "./spin -w #{workload} -s #{m_amount} -t #{table_size} -m #{alg} -r #{m_rate} -d #{job_dir}" 
        end
      end
    end
  end
end

num_children = 0

puts "Executing #{jobs.size} simulation trials"

jobs.each_with_index do |job,idx|
#  puts "Children: #{num_children}  procs: #{num_processes}"
  puts "Currently spawning job #{idx}"
  if num_children == num_processes
    Process.wait
    num_children -= 1
  end

  num_children += 1
  fork do
    puts "#{job}"
    `#{job}`
  end
end
